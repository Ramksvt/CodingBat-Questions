

/*
*Return the number of even ints in the given array. Note: the % "mod" operator computes the remainder, e.g. 5 % 2 is 1.
*countEvens([2, 1, 2, 3, 4]) → 3
*countEvens([2, 2, 0]) → 3
*countEvens([1, 3, 5]) → 0
*/

//Answer: 
public int countEvens(int[] nums) {
  
  //if a number is even then the remainder is 0 when / 2
  //the number is even if number % 2 == 0 
  //using countEvens variable to keep track of evens 

  int countEvens = 0;
  for(int i = 0; i < nums.length; i++)
  {
    if(nums[i] % 2 == 0)
    countEvens++; 
  }//end for loop 
  
  return 
  countEvens;
  
  
}//end method



/*
*Return the sum of the numbers in the array, returning 0 for an empty array. Except the number 13 is very
*unlucky, so it does not count and numbers that come immediately after a 13 also do not count.
*sum13([1, 2, 2, 1]) → 6
*sum13([1, 1]) → 2
*sum13([1, 2, 2, 1, 13]) → 6
*/

public int sum13(int[] nums) {
  
   if(nums.length == 0)
     return 0;
    
    int sum = 0;
 
  //for loop to traverse through array
  for(int i = 0; i < nums.length; i++)
  {
    //if the any given number in the array = 13, do not add 13 to the sum and no number after it
    if(nums[i] == 13)
    i++;
    
    else
    sum = sum + nums[i];
  }//ending for loop
  
  return 
  sum; 
  
}//end method




/*
*Given an array of ints, return true if the sum of all the 2's in the array is exactly 8.
*sum28([2, 3, 2, 2, 4, 2]) → true
*sum28([2, 3, 2, 2, 4, 2, 2]) → false
*sum28([1, 2, 3, 4]) → false
*/

public boolean sum28(int[] nums) 
{
  int number = 0;
  for(int i = 0; i < nums.length; i++)
  {
  if(nums[i] == 2)
  number = number + nums[i];
  }//end loop
  
  return(number == 8);
  }




/*
*Given an array of ints, return true if every element is a 1 or a 4.
*only14([1, 4, 1, 4]) → true
*only14([1, 4, 2, 4]) → false
*only14([1, 1]) → true
*/


public boolean only14(int[] nums)
{
  for(int i = 0; i < nums.length; i++)
  {
    
    if(nums[i] != 4 && nums[i] != 1)
    return false;
    
   }//end for loop
   
 return true;
 }//end method 
 
 
 
/*
*Given an array of ints, return true if the number of 1's is greater than the number of 4's
*more14([1, 4, 1]) → true
*more14([1, 4, 1, 4]) → false
*more14([1, 1]) → true
*/


public boolean more14(int[] nums) {
  {
	int balance = 0;
	for(int i = 0; i < nums.length; i++)
	{
		if(nums[i] == 1)
			balance++;
		else if(nums[i] == 4)
			balance--;
	}
	return (balance > 0);
}

}//end method 





 
 
 
 

















